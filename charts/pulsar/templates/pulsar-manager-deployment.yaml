#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

{{- if or .Values.components.pulsar_manager .Values.extra.pulsar_manager }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ template "pulsar.fullname" . }}-{{ .Values.pulsar_manager.component }}"
  namespace: {{ template "pulsar.namespace" . }}
  labels:
    {{- include "pulsar.standardLabels" . | nindent 4 }}
    component: {{ .Values.pulsar_manager.component }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "pulsar.matchLabels" . | nindent 6 }}
      component: {{ .Values.pulsar_manager.component }}
  template:
    metadata:
      labels:
        {{- include "pulsar.template.labels" . | nindent 8 }}
        component: {{ .Values.pulsar_manager.component }}
      annotations:
        {{- if .Values.pulsar_manager.restartPodsOnConfigMapChange }}
        checksum/config: {{ include (print $.Template.BasePath "/pulsar-manager-configmap.yaml") . | sha256sum }}
        {{- end }}
{{ toYaml .Values.pulsar_manager.annotations | indent 8 }}
    spec:
    {{- if .Values.pulsar_manager.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.pulsar_manager.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.pulsar_manager.tolerations }}
      tolerations:
{{ toYaml .Values.pulsar_manager.tolerations | indent 8 }}
    {{- end }}
      terminationGracePeriodSeconds: {{ .Values.pulsar_manager.gracePeriod }}
      containers:
        - name: "{{ template "pulsar.fullname" . }}-{{ .Values.pulsar_manager.component }}"
          image: "{{ .Values.images.pulsar_manager.repository }}:{{ .Values.images.pulsar_manager.tag }}"
          imagePullPolicy: {{ .Values.images.pulsar_manager.pullPolicy }}
        {{- if .Values.pulsar_manager.resources }}
          resources:
{{ toYaml .Values.pulsar_manager.resources | indent 12 }}
        {{- end }}
          ports:
          - containerPort: {{ .Values.pulsar_manager.service.targetPort }}
          volumeMounts:
          - name: pulsar-manager-data
            mountPath: /data
        {{- if .Values.auth.authentication.enabled }}
        {{- if eq .Values.auth.authentication.provider "jwt" }}
          - name: pulsar-manager-keys
            mountPath: /pulsar-manager/keys
        {{- end }}
        {{- end }}
          envFrom:
          - configMapRef:
              name: "{{ template "pulsar.fullname" . }}-{{ .Values.pulsar_manager.component }}"
          env:
          - name: PULSAR_CLUSTER
            value: {{ template "pulsar.fullname" . }}
          - name: PULSAR_MANAGER_OPTS
            value: "$(PULSAR_MANAGER_OPTS) -Dlog4j2.formatMsgNoLookups=true"
        {{- if .Values.auth.authentication.enabled }}
        {{- if eq .Values.auth.authentication.provider "jwt" }}
        {{- if .Values.auth.superUsers.manager }}
          - name: JWT_TOKEN
            valueFrom:
              secretKeyRef:
                key: TOKEN
                name: "{{ .Release.Name }}-token-{{ .Values.auth.superUsers.manager }}"
        {{- end }}
        {{- if .Values.auth.authentication.jwt.usingSecretKey }}
          - name: SECRET_KEY
            value: file:///pulsar-manager/keys/token/secret.key
        {{- else }}
          - name: PRIVATE_KEY
            value: file:///pulsar-manager/keys/token/private.key
          - name: PUBLIC_KEY
            value: file:///pulsar-manager/keys/token/public.key
        {{- end }}        
        {{- end }}
        {{- end }}          
        {{- include "pulsar.imagePullSecrets" . | nindent 6}}
      {{- if .Values.pulsar_manager.autoCreateAdminAccount }}
        - args:
          - |
            until curl http://localhost:7750/pulsar-manager; do
              sleep 3;
            done;
            CSRF_TOKEN=$(curl http://localhost:7750/pulsar-manager/csrf-token);
            curl \
              -H "X-XSRF-TOKEN: $CSRF_TOKEN" \
              -H "Cookie: XSRF-TOKEN=$CSRF_TOKEN;" \
              -H 'Content-Type: application/json' \
              -X PUT http://localhost:7750/pulsar-manager/users/superuser \
              -d "{\"name\": \"$SUPERUSER_NAME\", \"password\": \"$SUPERUSER_PASSWORD\", \"description\": \"superuser\", \"email\": \"superuser@nowhere.org\"}";
            sleep 1000000000000;
          command:
          - sh
          - -c
          env:
          - name: SUPERUSER_NAME
            valueFrom:
              secretKeyRef:
                key: PULSAR_MANAGER_ADMIN_USER
                {{- if .Values.pulsar_manager.existingSecretName }}
                name: "{{ .Values.pulsar_manager.existingSecretName }}"
                {{- else }}
                name: "{{ template "pulsar.fullname" . }}-{{ .Values.pulsar_manager.component }}-secret"
                {{- end }}
          - name: SUPERUSER_PASSWORD
            valueFrom:
              secretKeyRef:
                key: PULSAR_MANAGER_ADMIN_PASSWORD
                {{- if .Values.pulsar_manager.existingSecretName }}
                name: "{{ .Values.pulsar_manager.existingSecretName }}"
                {{- else }}
                name: "{{ template "pulsar.fullname" . }}-{{ .Values.pulsar_manager.component }}-secret"
                {{- end }}
          image: curlimages/curl:7.81.0
          imagePullPolicy: IfNotPresent
          name: "{{ template "pulsar.fullname" . }}-{{ .Values.pulsar_manager.component }}-superuser-init"
      {{- end }}          
      volumes:
        - name: pulsar-manager-data
          emptyDir: {}
      {{- if .Values.auth.authentication.enabled }}
      {{- if eq .Values.auth.authentication.provider "jwt" }}
        - name: pulsar-manager-keys
          secret:
            defaultMode: 420
          {{- if .Values.auth.authentication.jwt.usingSecretKey }}
            secretName: "{{ .Release.Name }}-token-symmetric-key"
          {{- else }}
            secretName: "{{ .Release.Name }}-token-asymmetric-key"          
          {{- end }}
            items:
          {{- if .Values.auth.authentication.jwt.usingSecretKey }}
            - key: SECRETKEY
              path: token/secret.key
          {{- else }}
            - key: PRIVATEKEY
              path: token/private.key
            - key: PUBLICKEY
              path: token/public.key
          {{- end }}
      {{- end }}
      {{- end }}
{{- end }}
