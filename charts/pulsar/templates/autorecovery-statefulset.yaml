#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

{{- if or .Values.components.autorecovery .Values.extra.autoRecovery }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{ template "pulsar.fullname" . }}-{{ .Values.autorecovery.component }}"
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "pulsar.standardLabels" . | nindent 4 }}
    component: {{ .Values.autorecovery.component }}
spec:
  serviceName: "{{ template "pulsar.fullname" . }}-{{ .Values.autorecovery.component }}"
  replicas: {{ .Values.autorecovery.replicaCount }}
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  # nodeSelector:
  selector:
    matchLabels:
      {{- include "pulsar.matchLabels" . | nindent 6 }}
      component: {{ .Values.autorecovery.component }}
  template:
    metadata:
      labels:
        {{- include "pulsar.template.labels" . | nindent 8 }}
        component: {{ .Values.autorecovery.component }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ .Values.autorecovery.ports.http }}"
{{- with .Values.autorecovery.annotations }}
{{ toYaml . | indent 8 }}
{{- end }}
    spec:
    {{- if .Values.autorecovery.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.autorecovery.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.autorecovery.tolerations }}
      tolerations:
{{- with .Values.autorecovery.tolerations }}
{{ toYaml . | indent 8 }}
{{- end }}
    {{- end }}
      affinity:
        {{- if and .Values.affinity.anti_affinity .Values.autorecovery.affinity.anti_affinity}}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: "app"
                operator: In
                values:
                - "{{ template "pulsar.name" . }}-{{ .Values.bookkeeper.component }}"
              - key: "release"
                operator: In
                values:
                - {{ .Release.Name }}
              - key: "component"
                operator: In
                values:
                - {{ .Values.bookkeeper.component }}
            topologyKey: "kubernetes.io/hostname"
        {{- end }}
      terminationGracePeriodSeconds: {{ .Values.autorecovery.gracePeriod }}
      initContainers:
      # This initContainer will wait for bookkeeper initnewcluster to complete
      # before deploying the bookies
      - name: pulsar-bookkeeper-verify-clusterid
        image: "{{ .Values.images.autorecovery.repository }}:{{ .Values.images.autorecovery.tag }}"
        imagePullPolicy: {{ .Values.images.autorecovery.pullPolicy }}
        command: ["sh", "-c"]
        args:
        - >
          {{- include "pulsar.autorecovery.init.verify_cluster_id" . | nindent 10 }}
        envFrom:
        - configMapRef:
            name: "{{ template "pulsar.fullname" . }}-{{ .Values.autorecovery.component }}"
        volumeMounts:
        {{- include "pulsar.autorecovery.certs.volumeMounts" . | nindent 8 }}
      containers:
      - name: "{{ template "pulsar.fullname" . }}-{{ .Values.autorecovery.component }}"
        image: "{{ .Values.images.autorecovery.repository }}:{{ .Values.images.autorecovery.tag }}"
        imagePullPolicy: {{ .Values.images.autorecovery.pullPolicy }}
      {{- if .Values.autorecovery.resources }}
        resources:
{{ toYaml .Values.autorecovery.resources | indent 10 }}
      {{- end }}
        command: ["sh", "-c"]
        args:
        - >
          bin/apply-config-from-env.py conf/bookkeeper.conf;
          bin/apply-config-from-env.py conf/bkenv.sh;
          {{- include "pulsar.autorecovery.zookeeper.tls.settings" . | nindent 10 }}
          bin/bookkeeper autorecovery
        ports:
        - name: http
          containerPort: {{ .Values.autorecovery.ports.http }}
        envFrom:
        - configMapRef:
            name: "{{ template "pulsar.fullname" . }}-{{ .Values.autorecovery.component }}"
        volumeMounts:
        {{- include "pulsar.autorecovery.certs.volumeMounts" . | nindent 8 }}
      volumes:
      {{- include "pulsar.autorecovery.certs.volumes" . | nindent 6 }}
{{- end }}

